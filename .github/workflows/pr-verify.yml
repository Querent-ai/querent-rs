name: Verify PR Commit
concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
  CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}

jobs:
  lint:
    name: Run linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af
        with:
          toolchain: nightly
          default: true
          target: x86_64-unknown-linux-gnu

      - name: Cargo fmt
        run: make format-check

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Rust Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af
        with:
          toolchain: nightly
          default: true
          profile: minimal
          target: x86_64-unknown-linux-gnu

      - name: Cargo build
        run: make build

  publish:
    name: Publish to Crates.io
    runs-on: ubuntu-latest
    needs: [lint, build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af
        with:
          toolchain: nightly
          default: true
          profile: minimal
          target: x86_64-unknown-linux-gnu

      - name: Login to Crates.io
        env:
          CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: echo "//registry.npmjs.org/:_authToken=${CRATES_IO_TOKEN}" > $HOME/.cargo/credentials

      - name: Publish Crate
        run: cargo publish --token ${CRATES_IO_TOKEN}
