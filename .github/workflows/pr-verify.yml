name: Verify PR Commit
concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true
on:
  pull_request:
    branches:
      - main
  push :
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings

jobs:
  verify:
    name: Check PR Commit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af
        with:
          toolchain: nightly
          default: true
          profile: minimal
          target: wasm32-unknown-unknown

      - name: Cargo check
        run: make check

  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af
        with:
          toolchain: nightly
          default: true
          profile: minimal
          target: wasm32-unknown-unknown

      - name: Cargo test
        run: make test

  lint:
    name: Run linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af
        with:
          toolchain: nightly
          default: true
          profile: minimal
          target: wasm32-unknown-unknown

      - name: Cargo fmt
        run: make format-check

  deny:
    name: Cargo Deny
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af
        with:
          toolchain: nightly
          default: true
          profile: minimal
          target: wasm32-unknown-unknown

      - name: Set Up Cargo Deny
        run: |
          cargo install --force cargo-deny
          cargo generate-lockfile

      - name: License and Issue Check
        run: make deny

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af
        with:
          toolchain: nightly
          default: true
          profile: minimal
          target: wasm32-unknown-unknown

      - name: Cargo build
        run: make build
  generate-docs:
    name: Generate querent rs rust docs
    runs-on: ubuntu-latest
    needs: [verify, test, lint, build]
    permissions:
      contents: read
      packages: write
      pages: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af
        with:
          toolchain: nightly
          default: true
          profile: minimal
          target: wasm32-unknown-unknown

      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Build Docs
        run: |
          RUSTDOCFLAGS="--enable-index-page -Zunstable-options" cargo doc --no-deps --all-features
      - name: Fix file permissions
        shell: sh
        run: |
          chmod -c -R +rX "target/doc" |
          while read line; do
              echo "::warning title=Invalid file permissions automatically fixed::$line"
          done

      - name: Upload Docs
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./target/doc
      - name: Deploy Docs
        uses: actions/deploy-pages@v2
        id: deployment
